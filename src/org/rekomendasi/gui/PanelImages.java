/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package org.rekomendasi.gui;

import java.awt.Graphics;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.rekomendasi.database.dao.KontrollerDatabase;
import org.rekomendasi.type.MyImage;

/**
 *
 * @author YuliArnezia
 */
public class PanelImages extends javax.swing.JDialog {

    /**
     * Creates new form PanelImages
     */
    
    public static final int REKOMENDASI = 0;
    public static final int IMAGE_PENGGUNA = 1;
    public static final int IMAGE_ORANG_LAIN = 2;
    private MyImage myImage;
    private Rekomendasi rekomendasi;
    public int kostum;
    public String taggingTerhadapImageOrangLain;
    private boolean dimatikan = false;
    public PanelImages(java.awt.Frame parent, boolean modal, MyImage myImage,Rekomendasi rekomendasi,int kostum) 
    {
        super(parent, modal);
        
        this.myImage = myImage;
        this.rekomendasi = rekomendasi;
        this.kostum = kostum;
        initComponents();
        jtKeteranganImage.getColumnModel().getColumn(0).setMaxWidth(160);
        jtKeteranganImage.getColumnModel().getColumn(0).setMinWidth(160);
        jtKeteranganImage.setValueAt(myImage.getPemilikImage(),0,1);
        jtKeteranganImage.setValueAt(myImage.getNamaImage(),1,1);
        jtKeteranganImage.setValueAt(myImage.getDeskripsiImage(),3,1);
        //jtKeteranganImage.setValueAt("tags'",2,1);
        inisialisasi(kostum);
        
    }
    public void inisialisasi(int kostum)
    {
        inisialisasiSemuaTagging();
        inisialisasiPemilikImage();
        kostumasiTampilan(kostum);
    }
    public void kostumasiTampilan(int tampilan)
    {
        switch(tampilan)
        {
            case REKOMENDASI :
            {
                if(((DefaultTableModel)jtKeteranganImage.getModel()).getRowCount()==5)
                ((DefaultTableModel)jtKeteranganImage.getModel()).removeRow(4);
                break;
            }
            case IMAGE_PENGGUNA :
            {
                jbLike.setVisible(false);
                break;
            }
            case IMAGE_ORANG_LAIN :
            {
                ((DefaultTableModel)jtKeteranganImage.getModel()).addRow(new Object[]{"Tagging Anda",taggingTerhadapImageOrangLain});
                break;
            }
        }
    }
    public void inisialisasiSemuaTagging()
    {
          if(myImage.getTagImagePemilik().size()!=0)
          {
            String tags = "";
            for(String tag : myImage.getTagImagePemilik())
            {
                tags += tag+";";
            }
            jtKeteranganImage.setValueAt(tags,2,1);
          }
        HashMap<String,List<String>> tags = myImage.getTagOrangLain();
        if(tags.size()!=0)
        {
            for(String nama : tags.keySet())
            {
                if(nama.equalsIgnoreCase(Rekomendasi.pengguna.getUsername()))
                {
                    if(tags.get(nama).size()!=0)
                    {
                        String tagString = "";
                        for(String tagi : tags.get(nama))
                        {
                            tagString += tagi+";";
                        }
            //            taggingAndaTF.setText(tagString);
                         jtKeteranganImage.setValueAt(tagString,4,1);
                    }
                }
            }
        }
    }
    public void inisialisasiPemilikImage()
    {
       if(Rekomendasi.pengguna.getUsername().equalsIgnoreCase(myImage.getPemilikImage()) && ((DefaultTableModel)jtKeteranganImage.getModel()).getRowCount()>5 )
       {
          // jLabel4.setVisible(false);
         //  taggingAndaTF.setVisible(false);
           ((DefaultTableModel)jtKeteranganImage.getModel()).removeRow(4);
       }
    }
    public boolean isImageMilikUser()
    {
         if(Rekomendasi.pengguna.getUsername().equalsIgnoreCase(myImage.getPemilikImage()))
         {
             return true;
         }
         return false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fotoJP = new javax.swing.JPanel()
        {
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                g.drawImage(myImage.getBuffImage(), 0, 0, getWidth(), getHeight(), this);

            }
        }
        ;
        jPanel2 = new javax.swing.JPanel();
        jbTagging = new javax.swing.JButton();
        jbLike = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtKeteranganImage = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1024, 768));
        setMinimumSize(new java.awt.Dimension(1024, 768));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1024, 768));

        fotoJP.setBackground(new java.awt.Color(255, 255, 255));
        fotoJP.setBorder(javax.swing.BorderFactory.createMatteBorder(35, 35, 35, 35, new java.awt.Color(0, 0, 0)));
        fotoJP.setMaximumSize(new java.awt.Dimension(1024, 568));
        fotoJP.setMinimumSize(new java.awt.Dimension(1024, 568));
        fotoJP.setPreferredSize(new java.awt.Dimension(1024, 568));
        fotoJP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fotoJPMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout fotoJPLayout = new javax.swing.GroupLayout(fotoJP);
        fotoJP.setLayout(fotoJPLayout);
        fotoJPLayout.setHorizontalGroup(
            fotoJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        fotoJPLayout.setVerticalGroup(
            fotoJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 698, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createMatteBorder(15, 15, 15, 15, new java.awt.Color(102, 102, 102)));

        jbTagging.setBackground(new java.awt.Color(255, 255, 255));
        jbTagging.setText("Add Tagging");
        jbTagging.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbTaggingActionPerformed(evt);
            }
        });

        jbLike.setBackground(new java.awt.Color(255, 255, 255));
        jbLike.setText("Like");
        jbLike.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLikeActionPerformed(evt);
            }
        });

        jtKeteranganImage.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jtKeteranganImage.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Nama Pemilik", null},
                {"Nama Image", null},
                {"Tagging Pemilik", null},
                {"Deskripsi", null},
                {"Tagging Anda", null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtKeteranganImage.setRowHeight(32);
        jtKeteranganImage.setRowMargin(4);
        jtKeteranganImage.setTableHeader(null);
        jScrollPane1.setViewportView(jtKeteranganImage);
        if (jtKeteranganImage.getColumnModel().getColumnCount() > 0) {
            jtKeteranganImage.getColumnModel().getColumn(0).setResizable(false);
            jtKeteranganImage.getColumnModel().getColumn(0).setPreferredWidth(50);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbLike, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbTagging)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 798, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jbLike, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                        .addComponent(jbTagging, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(fotoJP, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 1047, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(fotoJP, javax.swing.GroupLayout.DEFAULT_SIZE, 768, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fotoJPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fotoJPMouseClicked
       
        this.dispose();
    }//GEN-LAST:event_fotoJPMouseClicked

    private void jbLikeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLikeActionPerformed
        try {
            boolean berhasil = KontrollerDatabase.saveLike(myImage);
            if(berhasil)
            {
                jbLike.setText("UNLIKE");
                inisialisasi(IMAGE_ORANG_LAIN);
            }
        } catch (SQLException ex) {
            Logger.getLogger(PanelImages.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PanelImages.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.dispose();
        rekomendasi.refreshKondisiPanel();
    }//GEN-LAST:event_jbLikeActionPerformed

    private void jbTaggingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbTaggingActionPerformed
        saveTagging();
        this.dispose();
        rekomendasi.refreshKondisiPanel();
    }//GEN-LAST:event_jbTaggingActionPerformed

    private void saveTagging()
    {
       
        String tagging = JOptionPane.showInputDialog(null,"Masukkan Tagging Anda");
        String[] tags = tagging.split(",");
        for(String tag : tags)
        {
            try 
            {
                boolean berhasil = KontrollerDatabase.saveTagging(Rekomendasi.pengguna, myImage, tag);
                if(berhasil)
                {
                    
                    JOptionPane.showMessageDialog(null,"Tagging Berhasil DiInput");
                    taggingTerhadapImageOrangLain = tag;
                    
                    inisialisasi(IMAGE_ORANG_LAIN);
                    
                    if(isImageMilikUser())
                    {
                        
              //          tagPemilikTF.setText(tagPemilikTF.getText()+";"+tag);
                    }
                    else
                    {
               //         taggingAndaTF.setText(taggingAndaTF.getText()+";"+tag);
                    }
                    
                }
                else
                {
                    JOptionPane.showMessageDialog(null,"Memasukkan Tag Gagal Tidak Berhasil");
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Memasukkan Tag Gagal Dilakukan");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(PanelImages.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
            
        
    }
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(PanelImages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(PanelImages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(PanelImages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(PanelImages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                PanelImages dialog = new PanelImages(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel fotoJP;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbLike;
    private javax.swing.JButton jbTagging;
    private javax.swing.JTable jtKeteranganImage;
    // End of variables declaration//GEN-END:variables
}
