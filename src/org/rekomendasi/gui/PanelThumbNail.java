/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package org.rekomendasi.gui;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JToolTip;
import javax.swing.SwingUtilities;
import javax.swing.plaf.metal.MetalToolTipUI;
import net.coobird.thumbnailator.Thumbnails;
import org.rekomendasi.type.MyImage;

/**
 *
 * @author YuliArnezia
 */
public class PanelThumbNail extends javax.swing.JPanel {

    /**
     * Creates new form PanelThumbNail
     */
    private MyImage images;
    private BufferedImage thumbnail;
    private PanelImages panelImages;
    private Rekomendasi rekomendasi;
    public PanelThumbNail(MyImage images, Rekomendasi rekomendasi, int kostum) 
    {
        this.images = images;
        try {
            thumbnail = Thumbnails.of(images.getBuffImage()).scale(0.25).asBufferedImage();
        } catch (IOException ex) {
            Logger.getLogger(PanelThumbNail.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.rekomendasi = rekomendasi;
        this.setToolTipText("");
        initComponents();
        
        jLabel1.setText(images.getIdImage()+" - "+images.getNamaImage());
        jLabel2.setText(images.getPemilikImage());
       //  Random rnd = new Random();
     //   this.setBackground(new Color(rnd.nextInt()));
        panelImages = new PanelImages(null, true, images,rekomendasi,kostum);
         panelImages.setLocationRelativeTo(rekomendasi);
    }
    
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        g.drawImage(thumbnail, 0, 0,getWidth(), getHeight(), this);
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createMatteBorder(5, 15, 5, 15, new java.awt.Color(0, 0, 0)));
        setMaximumSize(new java.awt.Dimension(233, 142));
        setMinimumSize(new java.awt.Dimension(233, 142));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                formMouseExited(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("nama pemilik");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("nama pemilik");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(192, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(193, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        panelImages.setVisible(true);
       
    }//GEN-LAST:event_formMouseClicked

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        jLabel1.setVisible(false);
    //    setToolTip();
    }//GEN-LAST:event_formMouseEntered

    private void formMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseExited
       jLabel1.setVisible(true);
    }//GEN-LAST:event_formMouseExited
    public JToolTip createToolTip() {
        BufferedImage thumbnails = null;
        try {
            thumbnails = Thumbnails.of(images.getBuffImage()).size(600,400).asBufferedImage();
        } catch (IOException ex) {
            Logger.getLogger(PanelThumbNail.class.getName()).log(Level.SEVERE, null, ex);
        }
        return new ImageToolTip(thumbnails);
      }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
class ImageToolTip extends JToolTip {
  public ImageToolTip(BufferedImage img) {
    setUI(new ImageToolTipUI(img));
  }
}

class ImageToolTipUI extends MetalToolTipUI 

{
    public BufferedImage img;
    public ImageToolTipUI(BufferedImage img) {
        this.img = img;
    }
    
  public void paint(Graphics g, JComponent c) {
    FontMetrics metrics = c.getFontMetrics(g.getFont());
    g.setColor(c.getForeground());
    g.drawString(((JToolTip) c).getTipText(), 1, 1);
    g.drawImage(new ImageIcon(img).getImage(), 1, metrics.getHeight(), c);
  }

  public Dimension getPreferredSize(JComponent c) {
    
    return new Dimension(600, 400);
  }
}
